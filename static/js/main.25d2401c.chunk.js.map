{"version":3,"sources":["dbmanager/LocalDB.ts","components/events.ts","dbmanager/index.ts","screens/LogIn.tsx","screens/Home.tsx","components/StickyPaper.tsx","screens/Intro.tsx","components/customHooks.ts","screens/CreateQuestion.tsx","screens/CreateExam.tsx","screens/ExamQuestion.tsx","screens/ExamSummary.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LocalDBManager","dbname","db","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","READ_WRITE","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","createConn","that","Promise","res","rej","req","open","onupgradeneeded","event","target","result","createObjectStore","keyPath","console","log","onerror","onsuccess","toByteSize","b","sizes","maxi","length","i","toFixed","space","navigator","storage","estimate","then","quota","usage","used_p","descr","single","entity","id","tq","transaction","objectStore","get","e","list","attrs","type","filter","truthFn","reduce","t","k","openCursor","cursor","value","push","continue","randomId","Array","from","crypto","getRandomValues","Uint8Array","map","v","toString","padStart","join","post","data","tr","entt","isArray","forEach","el","add","oncomplete","ev","put","a","delete","key","deleteLocalDB","close","deleteDatabase","this","EventEmitter","_events","dispatch","callback","subscribe","unsubscribe","DBManager","URL","LDB","canLocal","Boolean","categories","cattree","login","apikey","reject","LocalDB","err","loadCategories","isLocal","catToTree","catTree","categs","fn","cat","pos","parts","split","part","__nq","clist","flat","Set","ee","error","updateCategories","qs","indexOf","createQuestions","Error","createExam","ex","separator","find","c","qlist","qnum","idx","Math","floor","random","que","ans","qpans","resp","splice","start","Date","now","end","getQuestion","getExam","saveAnswer","exam","index","answer","endExam","useCategories","useState","setCategs","useStyles","makeStyles","theme","createStyles","root","display","justifyContent","alignItems","height","halfwidth","minWidth","addpadding","paddingLeft","paddingRight","LogIn","doLogIn","classes","useTheme","React","setApiKey","undefined","handleLogIn","preventDefault","useEffect","className","CssBaseline","Card","variant","CardContent","noValidate","onSubmit","autoComplete","TextField","autoFocus","required","label","onChange","helperText","CardActions","Button","size","disabled","onClick","drawerWidth","title","color","textDecoration","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","content","flexGrow","maxWidth","contentShift","bottomnav","position","bottom","grow","Home","changeMode","isSmall","useMediaQuery","breakpoints","down","isDark","palette","openDrawer","setOpen","snack","setSnack","handleSnackClose","reason","AppBar","Toolbar","IconButton","aria-label","edge","Menu","to","Typography","noWrap","Tooltip","Drawer","anchor","paper","direction","ChevronLeft","ChevronRight","Divider","List","ListItem","button","component","NavLink","activeClassName","ListItemIcon","PlaylistAdd","ListItemText","primary","AssignmentTurnedIn","PlaylistAddCheck","exact","path","ExamSummary","ExamQuestion","CreateExam","Create","Intro","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","hideIn","onClose","Alert","severity","status","msg","BottomNavigation","showLabels","BottomNavigationAction","icon","stickypaper","flexDirection","StickyPaper","props","Paper","elevation","children","style","textAlign","gutterBottom","Link","RLink","margin","overflowY","marginTop","useStruct","initial_struct","useReducer","state","action","Object","keys","flform","file","useRef","importTry","setIT","importLoad","setIL","createTry","setCT","enun","obs","newQ","setNewQ","handleImport","current","files","reader","FileReader","readAsText","onload","filestr","JSON","parse","sort","handleCreate","href","download","inputRef","InputLabelProps","shrink","inputProps","accept","flex","multiline","Autocomplete","freeSolo","multiple","newValue","options","defaultValue","renderTags","getTagProps","option","Chip","renderInput","params","InputProps","endAdornment","InputAdornment","Beenhere","TurnedInNot","HighlightOff","alignSelf","maxHeight","overflow","backdrop","zIndex","history","useHistory","loading","setL","startTry","setST","time","qtime","modN","setModN","randtype","newE","setNewE","handleStartExam","select","MenuItem","Backdrop","CircularProgress","up","questions","errdiv","fontFamily","formControl","topProgress","msToString","diff","hours","mins","secs","slice","setError","setExam","resps","setResps","setAnswer","question","setQuestion","etxt","qtxt","etime","ended","setTime","antidx","NaN","startQ","interval","useParams","saveAnsToDB","isFinal","isNaN","tellError","q","catch","timeSetting","txt","clearInterval","min","ceil","toggleResp","paintResults","sep","examans","resptrue","anstrue","backgroundColor","r","array","j","shuffle","intv","setInterval","FormControl","FormGroup","FormControlLabel","control","Checkbox","checked","name","marginBottom","Assistant","thickness","toLocaleDateString","weekday","day","month","year","hour","minute","mark","good","bad","calculateMark","underline","App","matchMedia","matches","darkmode","setDarkMode","useMemo","createMuiTheme","blue","secondary","deepOrange","loggedIn","setLoggedIn","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25d2401c.chunk.js","sourcesContent":["import { Entity, Question, Exam, Space, DBImp } from '../types';\r\n\r\nexport default class LocalDBManager implements DBImp {\r\n    //https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\r\n    db?: IDBDatabase;\r\n    dbname = '';\r\n    indexedDB = window.indexedDB || (window as any).mozIndexedDB || (window as any).webkitIndexedDB || (window as any).msIndexedDB;\r\n    IDBTransaction = window.IDBTransaction || (window as any).webkitIDBTransaction || (window as any).msIDBTransaction || { READ_WRITE: \"readwrite\" };\r\n    IDBKeyRange = window.IDBKeyRange || (window as any).webkitIDBKeyRange || (window as any).msIDBKeyRange;\r\n\r\n    constructor(dbname: string) {\r\n        this.dbname = dbname;\r\n    }\r\n\r\n    createConn = () => {\r\n        let that = this;\r\n        return new Promise<string>((res, rej) => {\r\n            let req = this.indexedDB.open(this.dbname);\r\n            req.onupgradeneeded = (event: any) => {\r\n                let db = event.target?.result;\r\n                if (db) {\r\n                    db.createObjectStore(\"questions\", { keyPath: \"id\" });\r\n                    db.createObjectStore(\"exams\", { keyPath: \"id\" });\r\n                }\r\n                console.log('DB settled');\r\n            };\r\n            req.onerror = (event) => {\r\n                rej('You didn\\'t allow the app to create a Local Database');\r\n            };\r\n            req.onsuccess = (event) => {\r\n                that.db = req.result;\r\n                console.log(that.db);\r\n                res('');\r\n            };\r\n        });\r\n    }\r\n\r\n    toByteSize = (b: number = 0) => {\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'ZB'],\r\n            maxi = sizes.length - 1;\r\n        let i = 0;\r\n        while (b > 1024 && i < maxi) { b /= 1024; i++; }\r\n        return b.toFixed(2) + ' ' + sizes[i];\r\n    }\r\n\r\n    space = (): Promise<Space> => navigator.storage.estimate().then(({ quota, usage }) =>\r\n        ({ used_p: (quota && usage && (usage / quota) * 100) || 0, descr: `S'han utilitzat ${this.toByteSize(usage)} de ${this.toByteSize(quota)}` }));\r\n\r\n    single = (entity: Entity, id: string) => {\r\n        let that = this;\r\n        return new Promise<Question>((res, rej) => {\r\n            let tq = that.db?.transaction(entity, \"readonly\").objectStore(entity).get(id);\r\n            if (tq) {\r\n                tq.onerror = rej;\r\n                tq.onsuccess = (e: any) => res(e.target.result);\r\n            }\r\n            else rej('Cannot open transaction');\r\n        });\r\n    }\r\n\r\n    list = (entity: Entity, attrs?: string | Array<string> | ((e: any) => boolean), type?: 'include' | 'exclude') => {\r\n        let that = this,\r\n            filter = (e: any) => e,\r\n            truthFn = (e: any) => true;\r\n        if (typeof attrs === 'function') truthFn = attrs;\r\n        else if (attrs) {\r\n            if (!type || type === 'include') {\r\n                if (typeof attrs === 'string') filter = (e: any) => e[attrs];\r\n                else filter = (e: Question) => attrs.reduce((t, k) => { t[k] = e[k]; return t; }, {} as Question);\r\n            }\r\n            else {\r\n                if (typeof attrs === 'string') filter = (e: Question) => { delete e[attrs]; return e; };\r\n                else filter = (e: Question) => attrs.reduce((t, k) => { delete t[k]; return t; }, e);\r\n            }\r\n        }\r\n        return new Promise<Array<any>>((res, rej) => {\r\n            let tq = that.db?.transaction(entity, \"readonly\").objectStore(entity);\r\n            let req = tq?.openCursor();\r\n            let result: Array<any> = [];\r\n            if (req) {\r\n                req.onerror = rej;\r\n                req.onsuccess = (e: any) => {\r\n                    let cursor = e.target.result;\r\n                    if (cursor) {\r\n                        if (truthFn(cursor.value)) result.push(filter(cursor.value));\r\n                        cursor.continue();\r\n                    }\r\n                    else res(result);\r\n                }\r\n            }\r\n            else rej('Cannot open transaction with cursor');\r\n        })\r\n    }\r\n\r\n    randomId = (length: number) => {\r\n        return Array.from(window.crypto.getRandomValues(new Uint8Array(length / 2))).map(v => v.toString(16).padStart(2, \"0\")).join('')\r\n    }\r\n\r\n    post = (entity: Entity, data: Question | Array<Question> | Exam | Array<Exam>) => {\r\n        let that = this;\r\n        return new Promise<string | null>((res, rej) => {\r\n            let tr = that.db?.transaction(entity, \"readwrite\"),\r\n                entt = tr?.objectStore(entity);\r\n\r\n            if (!tr || !entt) return rej('Error initializing transaction');\r\n\r\n            if (Array.isArray(data))\r\n                data.forEach((el: Question | Exam) => {\r\n                    if (!el.id) el.id = that.randomId(10);\r\n                    entt?.add(el)\r\n                });\r\n            else {\r\n                if (!data.id) data.id = that.randomId(10);\r\n                entt?.add(data);\r\n            }\r\n            tr.oncomplete = () => res(null);\r\n            tr.onerror = ev => rej(ev.toString());\r\n        });\r\n    }\r\n\r\n    put = async (entity: Entity, data: Question | Array<Question> | Exam | Array<Exam>) => {\r\n        let that = this;\r\n        return new Promise<string | null>((res, rej) => {\r\n            let tr = that.db?.transaction(entity, \"readwrite\"),\r\n                entt = tr?.objectStore(entity);\r\n\r\n            if (!tr || !entt) return rej('Error initializing transaction');\r\n\r\n            if (Array.isArray(data))\r\n                data.forEach((el: Question | Exam) => {\r\n                    entt?.put(el)\r\n                });\r\n            else {\r\n                entt?.put(data);\r\n            }\r\n            tr.oncomplete = () => res(null);\r\n            tr.onerror = ev => rej(ev.toString());\r\n        });\r\n    }\r\n\r\n    delete = async (key: string) => {\r\n        return null;\r\n    }\r\n\r\n    deleteLocalDB = async () => {\r\n        if (this.db) {\r\n            let that = this;\r\n            return new Promise((res, rej) => {\r\n                that.db?.close();\r\n                let t = that.indexedDB.deleteDatabase(that.dbname)\r\n                t.onsuccess = res;\r\n                t.onerror = rej;\r\n            });\r\n        }\r\n        return false;\r\n    }\r\n}","export const EventEmitter = {\r\n    _events: {} as any,\r\n  dispatch(event: string, data?: any) {\r\n    if (!this._events[event]) return;\r\n    this._events[event].forEach((callback:(data: any) => any) => callback(data))\r\n  },\r\n  subscribe(event:string, callback: (data: any) => any) {\r\n    if (!this._events[event]) this._events[event] = [];\r\n    this._events[event].push(callback);\r\n  },\r\n  unsubscribe(event: string) {\r\n    if (!this._events[event]) return;\r\n    delete this._events[event];\r\n  }\r\n}","import LocalDB from './LocalDB';\r\nimport { Question, Exam, DBImp, CatTree } from '../types';\r\nimport { useState } from 'react';\r\nimport { EventEmitter as ee } from '../components/events';\r\nimport { QueueSharp } from '@material-ui/icons';\r\n\r\nclass MainDBManager {\r\n\r\n    private URL = 'http://example.com/example';\r\n    private LDB = 'examinatordb';\r\n\r\n    db?: DBImp;\r\n    canLocal = Boolean(window.indexedDB);\r\n\r\n    //On-memory variables\r\n    categories?: Array<string>;\r\n    cattree?: CatTree;\r\n\r\n    login = async (apikey: string): Promise<string> => {\r\n        let that = this;\r\n        if (apikey === 'local') {\r\n            if (!this.canLocal)\r\n                return Promise.reject('No se puede conectar a la base de datos local... Prueba otro navegador.');\r\n            this.db = new LocalDB(this.LDB);\r\n        }\r\n        else {\r\n            //this.db = new WebDBManager(this.URL);\r\n            return Promise.reject('Not Implemented');\r\n        }\r\n        let err = await this.db?.createConn();\r\n        if (!err) this.loadCategories();\r\n        return err;\r\n    }\r\n\r\n    isLocal = () => this.db && this.db instanceof LocalDB;\r\n\r\n    catToTree = (catTree: CatTree, categs: string | Array<string>) => {\r\n        const fn = (cat: string) => {\r\n            let pos = catTree,\r\n                parts = cat.split('/');\r\n            if (parts.length === 0) return;\r\n            parts.forEach(part => {\r\n                if (!pos[part]) pos[part] = { __nq: 0 };\r\n                pos = pos[part] as CatTree;\r\n            });\r\n            pos.__nq += 1;\r\n        };\r\n        if (Array.isArray(categs)) categs.forEach(fn);\r\n        else fn(categs);\r\n    }\r\n\r\n    loadCategories = async (): Promise<Array<string>> => {\r\n        if (!this.db) return [];\r\n        try {\r\n            let clist = await this.db.list(\"questions\", 'cat');\r\n            //console.log('CLIST: ', clist);\r\n            this.cattree = { __nq: 0 };\r\n            if (clist.length > 0) {\r\n                clist = clist.flat();\r\n                this.categories = [...new Set(clist)] as Array<string>;\r\n                this.catToTree(this.cattree, clist);\r\n            }\r\n            else this.categories = [];\r\n            ee.dispatch('categories');\r\n\r\n        } catch (e) {\r\n            console.error('loadCategories', e);\r\n        }\r\n        return [];\r\n    };\r\n\r\n    updateCategories = async (qs: Question | Array<Question>): Promise<void> => {\r\n        if (!Array.isArray(qs)) qs = [qs];\r\n        if (!this.categories){ \r\n            this.categories = [];\r\n            this.cattree = { __nq: 0 };\r\n        }\r\n        qs.forEach((el: Question) => el.cat.forEach(cat => {\r\n            if (!this.categories || !this.cattree) return;\r\n            else if (this.categories.indexOf(cat) === -1) {\r\n                this.categories.push(cat);\r\n                this.catToTree(this.cattree, cat);\r\n            }\r\n        }));\r\n        ee.dispatch('categories');\r\n    }\r\n\r\n    createQuestions = async (qs: Question | Array<Question>) => {\r\n        if (!qs || qs?.length === 0) return 'No elements to create';\r\n        let error = await this.db?.post(\"questions\", qs);\r\n        if (error) throw new Error(error);\r\n        else await this.updateCategories(qs);\r\n    }\r\n\r\n    createExam = async (ex: Exam) => {\r\n        console.log('Exam: ', ex);\r\n        const separator = '|ç|',\r\n            categs = separator+ex.cat.join(separator);\r\n        //Especifiquem les preguntes\r\n        let qlist = await this.db?.list(\"questions\", (qs: Question) => {\r\n            return !!qs.cat.find((c: string) => categs.indexOf(separator + c) !== -1);\r\n        });\r\n        if (!qlist) throw new Error('Problema con la DB al obtener preguntas');\r\n        else if (qlist.length < ex.qnum)\r\n            throw new Error('No hay suficientes preguntas en las categorias seleccionadas.\\nSelecciona más categorias o introduce más preguntas.');\r\n        else {\r\n            let idx = 0;\r\n            for (let i = 0; i < ex.qnum; i++) {\r\n                idx = Math.floor(Math.random() * qlist.length);\r\n                ex.que.push(qlist[idx].id);\r\n                ex.ans.push(qlist[idx].ans);\r\n                ex.qpans.push(qlist[idx].resp.length);\r\n                ex.res.push(\"\");\r\n                qlist.splice(idx, 1);\r\n            }\r\n        }\r\n        //Obtenim l'id ara ja, per poder-lo retornar després\r\n        ex.id = this.db?.randomId(30) || \"\";\r\n        //Establim el temps\r\n        ex.start = Date.now() + 1000; //Afegim un segon per a processar-lo.\r\n        ex.end = 0; //0 -> no ha acabat, >0 -> ha acabat per l'usuari, timestamp UNIX\r\n        //Ho passem a la DB\r\n        let error = await this.db?.post(\"exams\", ex);\r\n        if (error) throw new Error(error);\r\n        return ex.id;\r\n    }\r\n    \r\n    getQuestion = (id:string) => {\r\n        if (!this.db) throw 'No DB Connection';\r\n        return this.db.single(\"questions\",id) as Promise<Question>;\r\n    }\r\n\r\n\r\n    getExam = async (id: string) => {\r\n        if (!this.db) throw 'No DB Connection';\r\n        return this.db.single(\"exams\",id) as Promise<Exam>;\r\n    }\r\n\r\n    saveAnswer = async (exam:Exam,index:number,answer:string)=>{\r\n        if (!this.db) throw 'No DB Connection';\r\n        exam.res[index] = answer;\r\n        return this.db.put(\"exams\",exam);\r\n    }\r\n\r\n    endExam = async (exam:Exam)=>{\r\n        if (!this.db) throw 'No DB Connection';\r\n        exam.end = Date.now();\r\n        return this.db.put(\"exams\",exam);\r\n    }\r\n}\r\n\r\nexport const DBManager = new MainDBManager();\r\nexport function useCategories() {\r\n    const [categs, setCategs] = useState(DBManager.categories);\r\n\r\n    ee.subscribe('categories', () => setCategs(DBManager.categories));\r\n\r\n    return categs;\r\n}\r\nexport function useCategTree() {\r\n    const [categs, setCategs] = useState(DBManager.cattree);\r\n\r\n    ee.subscribe('categories', () => setCategs(DBManager.cattree));\r\n\r\n    return categs;\r\n}","\r\nimport React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { DBManager } from '../dbmanager';\r\nimport { Button, Card, CardActions, CardContent, createStyles, makeStyles, TextField, Theme } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh'\r\n    },\r\n    halfwidth: { minWidth: '50vw' },\r\n    addpadding: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16\r\n    }\r\n}));\r\n\r\ntype LogInProps = {\r\n    doLogIn: (apikey: string) => Promise<string>\r\n}\r\n\r\nexport default function LogIn({ doLogIn }: LogInProps) {\r\n\r\n    const classes = useStyles(useTheme()),\r\n        { canLocal } = DBManager,\r\n        [apikey, setApiKey] = React.useState<string | undefined>(),\r\n        err = apikey !== undefined && !apikey;\r\n\r\n    const handleLogIn = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!apikey)\r\n            return setApiKey(\"\");\r\n        const result: string = await doLogIn(apikey);\r\n        if (result) {\r\n            console.log(result);\r\n            setApiKey(\"\");\r\n        }\r\n    }\r\n    React.useEffect(() => { doLogIn('local'); }, []); //Quan tinguem servidor treiem això\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Card variant=\"outlined\">\r\n                <CardContent>\r\n                    <form noValidate onSubmit={handleLogIn} autoComplete=\"off\">\r\n                        <TextField\r\n                            autoFocus\r\n                            required\r\n                            error={err}\r\n                            id=\"outlined-error-helper-text\"\r\n                            label=\"Api Key\"\r\n                            onChange={e => setApiKey(e.target.value)}\r\n                            className={classes.halfwidth}\r\n                            helperText={err ? \"Incorrect entry.\" : \"\"}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </form>\r\n                </CardContent>\r\n                <CardActions className={classes.addpadding}>\r\n                    <Button size=\"small\" disabled={!apikey} onClick={handleLogIn}>Connect!</Button>\r\n                    <Button size=\"small\" disabled={!canLocal} onClick={() => doLogIn('local')}>Local</Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { AppBar, BottomNavigation, BottomNavigationAction, createStyles, Divider, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, makeStyles, Snackbar, Theme, Toolbar, Tooltip, Typography } from '@material-ui/core';\r\nimport { PlaylistAddCheck, PlaylistAdd, AssignmentTurnedIn, Menu, ChevronLeft, ChevronRight, Face } from '@material-ui/icons';\r\nimport { HashRouter as Router, Switch, Route, NavLink, Link } from \"react-router-dom\";\r\nimport { Intro, CreateQuestion, CreateExam, ExamQuestion, ExamSummary } from '.';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    title: {\r\n        color: 'inherit',\r\n        textDecoration: 'none'\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n        padding: theme.spacing(2),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    bottomnav: {\r\n        position: 'fixed',\r\n        bottom: 0,\r\n        width: '100%',\r\n        display: 'flex',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    }\r\n}));\r\n\r\n\r\ntype HomeProps = {\r\n    changeMode: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport default function Home({ changeMode }: HomeProps) {\r\n\r\n    const theme = useTheme(),\r\n        isSmall = useMediaQuery(theme.breakpoints.down(\"sm\")),\r\n        isDark = theme.palette.type === 'dark',\r\n        [openDrawer, setOpen] = React.useState(false),\r\n        [snack, setSnack] = React.useState<any>({ open: false }),\r\n        classes = useStyles();\r\n\r\n    const handleSnackClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') return;\r\n        setSnack({ open: false });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Router>\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={classes.appBar + (openDrawer && !isSmall ? ' ' + classes.appBarShift : '')}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={() => setOpen(true)}\r\n                            edge=\"start\"\r\n                            className={classes.menuButton + (openDrawer || isSmall ? ' ' + classes.hide : '')}\r\n                        >\r\n                            <Menu />\r\n                        </IconButton>\r\n                        <Link to=\"/\" className={classes.title}><Typography variant=\"h6\" noWrap>&#128175; Examinator β! &#128175;</Typography></Link>\r\n                        <div className={classes.grow} />\r\n                        <Tooltip title=\"Cambia Tema\">\r\n                            <IconButton\r\n                                color=\"default\"\r\n                                edge=\"start\"\r\n                                onClick={() => changeMode(!isDark)}\r\n                            >\r\n                                <span>{isDark ? '🌞' : '🌜'}</span>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        {/*<Tooltip title=\"Mis Cosas\">\r\n                            <Link to=\"/yo\">\r\n                                <IconButton\r\n                                    color=\"default\"\r\n                                    edge=\"end\"\r\n                                >\r\n                                    <Face />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Tooltip>*/}\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={openDrawer && !isSmall}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={() => setOpen(false)}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button component={NavLink} to=\"/preguntas/crear\" activeClassName=\"Mui-selected\">\r\n                            <ListItemIcon><PlaylistAdd /></ListItemIcon>\r\n                            <ListItemText primary={\"Crear Preguntas\"} />\r\n                        </ListItem>\r\n                        <ListItem button component={NavLink} to=\"/examen\" activeClassName=\"Mui-selected\">\r\n                            <ListItemIcon><AssignmentTurnedIn /></ListItemIcon>\r\n                            <ListItemText primary={\"Hacer Examen\"} />\r\n                        </ListItem>\r\n                        <ListItem button component={NavLink} to=\"/preguntas/gestionar\" activeClassName=\"Mui-selected\">\r\n                            <ListItemIcon><PlaylistAddCheck /></ListItemIcon>\r\n                            <ListItemText primary={\"Gestionar Preguntas\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                </Drawer>\r\n\r\n                <main className={classes.content + (openDrawer && !isSmall ? ' ' + classes.contentShift : '')}>\r\n                    <div className={classes.drawerHeader} />\r\n                    <Switch>\r\n                        <Route exact path=\"/examen/:id\">\r\n                            <ExamSummary setSnack={setSnack} />\r\n                        </Route>\r\n                        <Route exact path=\"/examen/:id/:index\">\r\n                            <ExamQuestion setSnack={setSnack} />\r\n                        </Route>\r\n                        <Route path=\"/examen\">\r\n                            <CreateExam setSnack={setSnack} />\r\n                        </Route>\r\n                        <Route path=\"/preguntas/crear\">\r\n                            <CreateQuestion isSmall={isSmall} setSnack={setSnack} />\r\n                        </Route>\r\n                        <Route path=\"/preguntas/gestionar\">\r\n                            <PlaylistAddCheck />\r\n                        </Route>\r\n                        <Route path=\"/yo\">\r\n                            <PlaylistAddCheck />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <Intro />\r\n                        </Route>\r\n                    </Switch>\r\n                    {isSmall && <div className={classes.drawerHeader} />}\r\n                </main>\r\n                <Snackbar open={snack.open} \r\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n                    autoHideDuration={snack.hideIn || 4000} \r\n                    onClose={snack.onClose || handleSnackClose}>\r\n                    <Alert onClose={snack.onClose || handleSnackClose} severity={snack.status || \"info\"}>{snack.msg}</Alert>\r\n                </Snackbar>\r\n                {isSmall &&\r\n                    (<BottomNavigation className={classes.bottomnav} showLabels>\r\n                        <BottomNavigationAction component={NavLink} to=\"/preguntas/crear\" activeClassName=\"Mui-selected\" value=\"preguntas\" label=\"Crear P\" icon={<PlaylistAdd />} />\r\n                        <BottomNavigationAction component={NavLink} to=\"/examen\" activeClassName=\"Mui-selected\" value=\"examen\" label=\"Examen\" icon={<AssignmentTurnedIn />} />\r\n                        <BottomNavigationAction component={NavLink} to=\"/preguntas/gestionar\" activeClassName=\"Mui-selected\" value=\"preguntas\" label=\"Gestionar P\" icon={<PlaylistAddCheck />} />\r\n                    </BottomNavigation>)}\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n","import { Paper, PaperProps, createStyles, makeStyles, Theme } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    stickypaper : {\r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        padding: '5vh 5vw'\r\n    }\r\n}));\r\n\r\nexport default function StickyPaper(props:PaperProps){\r\n    const classes = useStyles();\r\n    return <Paper {...props} className={classes.stickypaper+(props.className ? ' '+props.className : '')} elevation={props.elevation || 3}>{props.children}</Paper>\r\n}","import { Typography, Link } from '@material-ui/core';\r\nimport React from 'react';\r\nimport StickyPaper from '../components/StickyPaper';\r\nimport { Link as RLink } from 'react-router-dom';\r\n\r\nexport default function Intro() {\r\n    return (<div>\r\n        <Typography variant=\"h4\" style={{ textAlign: 'center' }} gutterBottom>Bienvenidos al EXAMINATOR! </Typography>\r\n        <Typography variant=\"subtitle1\" style={{ textAlign: 'center' }} gutterBottom>Examinator es una herramienta para autoevaluarte de la forma que más te guste!<br />Si eres nuevo a la plataforma, solo tienes que seguir los siguientes pasos: </Typography>\r\n        <ol>\r\n        <li><Typography variant=\"body1\" gutterBottom>Introduce tus preguntas (o importalas en formato JSON, de la forma que sigue) en el apartado <Link component={RLink} to=\"/preguntas/crear\">Crear Preguntas</Link></Typography></li>\r\n        <div>\r\n            <StickyPaper style={{ margin:'10px 0', overflowY:'auto', maxWidth:'100%', padding: 10, display: 'inline-flex' }}>\r\n                <pre style={{ margin:0 }}>\r\n                    {`[{\r\n    \"enun\": \"Aqui se escribe la pregunta, lo has entendido?\",\r\n    \"cat\":[\"Prueba1/Sociologia\",\"Biologia\",\"CatPadre/CatHijo\"],\r\n    \"resp\": [\"Respuesta1\",\"Respuesta2\",\"Respuesta3\",\"Si que lo he entendido\",\"No lo he entendido\"],\r\n    \"ans\": [\"Si que lo he entendido\",\"Respuesta2\"],\r\n    \"obs\": \"Se seleccionan las respuestas especificadas porque hemos entendido el concepto.\"\r\n},\r\n{\r\n    \"enun\": \"Segunda pregunta: 2+2?\",\r\n    \"cat\":[\"Prueba2/Matematicas\",\"CatPadre/CatHijo\",\"CatAbuelo/CatPadre/CatHijo\"],\r\n    \"resp\": [\"5\",\"99999\",\"855\",\"6\",\"4\"],\r\n    \"ans\": [\"4\"],\r\n    \"obs\": \"Esto es una observación que sólo se verà al revisar las respuestas de un examen\"\r\n},\r\n{\r\n    \"enun\": \"Ultima pregunta: como estas?\",\r\n    \"cat\":[\"Prueba3/Psicologia\",\"CatPadre/CatHijo\",\"CatAbuelo/CatPadre/CatHijo\"],\r\n    \"resp\": [\"Bien\",\"Genial\",\"Normal\",\"Content@\",\"Interesada\"],\r\n    \"ans\": [\"Genial\",\"Content@\"],\r\n    \"obs\": \"Podriamos dejar este campo en blanco si quisieramos o no añadirlo.\"\r\n}]`}\r\n                </pre>\r\n            </StickyPaper>\r\n        </div>\r\n        <li><Typography variant=\"body1\" gutterBottom>Examinate de las categorias que quieras en el apartado <Link component={RLink} to=\"/examen\">Hacer Examen</Link></Typography></li>\r\n        {/*<li><Typography variant=\"body1\" gutterBottom>Si quieres modificar o deshacerte de alguna pregunta, el apartado <Link component={RLink} to=\"/preguntas/gestionar\">Gestionar Preguntas</Link> te va a ayudar a ello!</Typography></li>\r\n        <li><Typography variant=\"body1\" gutterBottom>Finalmente, vas a encontrar tus resultados en <Link component={RLink} to=\"/yo\">Mis Cosas</Link></Typography></li>*/}\r\n        <Typography variant=\"h5\" style={{ textAlign: 'center', marginTop: 20 }} gutterBottom> A <span style={{ textDecoration: 'line-through'}}>DISFRUTAR</span> <strong>ESTUDIAR</strong>! </Typography>\r\n        </ol>\r\n    </div>)\r\n}","import React from 'react';\r\n\r\nexport function useStruct(initial_struct:any){\r\n    const reducer = (state:any,action:any)=>{\r\n        //return { ...state, ...action };\r\n        let result:any = {};\r\n        if (action === null) return { ...initial_struct };\r\n        Object.keys(state).forEach((k:string)=>{\r\n            if (typeof action[k] === 'function'){\r\n                if (Array.isArray(state[k])) result[k] = [...state[k]];\r\n                else if (typeof state[k] === 'object') result[k] = { ...state[k] };\r\n                action[k](result[k]);\r\n            }\r\n            else result[k] = action[k] ?? state[k];\r\n        });\r\n        return result;\r\n    }\r\n    return React.useReducer(reducer,initial_struct);\r\n}","import { Button, createStyles, makeStyles, TextField, Theme, Typography, Chip, Link, FormControl, IconButton, InputAdornment, InputLabel, OutlinedInput } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport StickyPaper from '../components/StickyPaper';\r\nimport { DBManager, useCategories } from '../dbmanager';\r\nimport { Question } from '../types';\r\nimport { useStruct } from '../components/customHooks';\r\nimport { HighlightOff, Beenhere, TurnedInNot } from '@material-ui/icons';\r\nconsole.log('DBMANAGER:', DBManager);\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100'\r\n    },\r\n    flform: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '10px 0',\r\n        '&>.with-margin>*': {\r\n            margin: 10\r\n        },\r\n        '&>:not(.with-margin)': {\r\n            margin: 10\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function Create({ isSmall, setSnack }: { isSmall: boolean, setSnack: React.Dispatch<any> }) {\r\n    const classes = useStyles(),\r\n        file = React.useRef<HTMLInputElement>(null),\r\n        categories = useCategories(),\r\n        [importTry, setIT] = React.useState(''),\r\n        [importLoad, setIL] = React.useState(true),\r\n        [createTry, setCT] = React.useState(false),\r\n        [newQ, setNewQ] = useStruct({ enun: '', cat: [], resp: [], ans: [], obs: '' });\r\n\r\n    const handleImport = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!file?.current?.files?.[0]) return setIT('No file selected');\r\n        setIL(true);\r\n        console.log('to read');\r\n        let reader = new FileReader();\r\n        reader.readAsText(file.current.files[0]);\r\n        reader.onload = async (ev: any) => {\r\n            console.log('loaded');\r\n            let filestr = ev.target.result;\r\n            try {\r\n                filestr = JSON.parse(filestr);\r\n                if (!Array.isArray(filestr)) throw 'Base is not array';\r\n                let i = 0, e: any;\r\n                while (i < filestr.length) {\r\n                    e = filestr[i];\r\n                    if (typeof e.enun !== 'string' || e.enun.length === 0)\r\n                        throw `Attribute \"enun\" del elemento ${i + 1} invalido`;\r\n                    else if (!Array.isArray(e.cat) || e.cat.length === 0 || e.cat.find((el: any) => typeof el !== 'string'))\r\n                        throw `Atributo \"cat\" del elemento ${i + 1} invalido`;\r\n                    else if (!Array.isArray(e.resp) || e.resp.length === 0 || e.resp.find((el: any) => typeof el !== 'string'))\r\n                        throw `Atributo \"resp\" del elemento ${i + 1} invalido`;\r\n                    else if (!Array.isArray(e.ans) || e.ans.length === 0 || e.ans.find((el: any) => typeof el !== 'string' || e.resp.indexOf(el) === -1))\r\n                        throw `Atributo \"ans\" del elemento ${i + 1} invalido`;\r\n                    else if (!e.obs) e.obs = \"\";\r\n                    else if (typeof e.obs !== 'string')\r\n                        throw `Atributo \"obs\" del elemento ${i + 1} invalido`;\r\n                    e.ans = e.ans.map((el: string) => e.resp.indexOf(el)).sort((a: number, b: number) => a - b).join(\"|\");\r\n                    i++;\r\n                }\r\n                //Hem comprovat el fitxer, sembla que està bé, toca importar-lo de veritat\r\n                await DBManager.createQuestions(filestr as Array<Question>);\r\n                setIT('');\r\n                setSnack({ open: true, status: 'success', msg: 'Preguntas añadidas!' });\r\n            }\r\n            catch (e) { setIT('Error: ' + e.toString()); }\r\n            setIL(false);\r\n        }\r\n        reader.onerror = (ev: any) => { setIT('Error: ' + e.toString()); setIL(false); }\r\n    }\r\n\r\n    const handleCreate = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setCT(true);\r\n        try {\r\n            if (newQ.enun && newQ.cat.length > 0 && newQ.resp.length > 0 && newQ.ans.length > 0) {\r\n                console.log(newQ);\r\n                await DBManager.createQuestions(newQ);\r\n                setSnack({ open: true, status: 'success', msg: 'Pregunta añadida!' });\r\n                setNewQ(null);\r\n            }\r\n        }\r\n        catch (e) { setSnack({ open: true, status: 'error', msg: 'Error: ' + e.toString() }); }\r\n        setCT(false);\r\n    }\r\n\r\n    return (<div className={classes.root}>\r\n        <StickyPaper>\r\n            {!isSmall &&\r\n                <form id=\"import-form\" className={classes.flform} onSubmit={handleImport} autoComplete=\"off\">\r\n                    <Typography variant=\"h6\">Importar preguntas (<Link href=\"/preguntas_modelo.json\" download>ejemplo</Link>)</Typography>\r\n                    <Typography variant=\"body1\" gutterBottom>Si saltan muchos errores y no se te importa, puedes utilizar la herramienta online <Link href=\"https://jsonlint.com/\" target=\"_blank\">JSONlint</Link> para ver que errores hay en que linea</Typography>\r\n                    <div className=\"with-margin\" style={{ display: 'flex' }} >\r\n                        <TextField\r\n                            autoFocus\r\n                            error={!!importTry}\r\n                            helperText={importTry}\r\n                            required\r\n                            type=\"file\"\r\n                            inputRef={file}\r\n                            variant=\"outlined\"\r\n                            label=\"Fichero con preguntas\"\r\n                            onChange={() => !!file?.current?.files?.[0] && setIL(false)}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            inputProps={{ accept: \"application/json\" }}\r\n                            style={{ flex: 1 }}\r\n                        />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={importLoad}>Importar</Button>\r\n                    </div>\r\n                </form>\r\n            }\r\n            {!isSmall && <Typography variant=\"h5\" style={{ textAlign: 'center' }}>O</Typography>}\r\n            <form id=\"create-form\" className={classes.flform} noValidate onSubmit={handleCreate} autoComplete=\"off\">\r\n                <Typography variant=\"h6\">Crear preguntas</Typography>\r\n                <TextField\r\n                    required multiline\r\n                    error={createTry && !newQ.enun}\r\n                    label=\"Enunciado\"\r\n                    value={newQ.enun}\r\n                    onChange={e => setNewQ({ enun: e.target.value })}\r\n                    //className={classes.halfwidth}\r\n                    helperText={createTry && !newQ.enun ? \"Un problema necessita su enunciado\" : \"\"}\r\n                    variant=\"outlined\"\r\n                />\r\n                <Autocomplete\r\n                    freeSolo multiple\r\n                    value={newQ.cat}\r\n                    onChange={(event: any, newValue: Array<string>) => {\r\n                        setNewQ({ cat: newValue });\r\n                    }}\r\n                    options={categories || []}\r\n                    defaultValue={[]}\r\n                    style={{ display: 'flex' }}\r\n                    renderTags={(value: string[], getTagProps: any) =>\r\n                        value.map((option: string, index: number) => (\r\n                            <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\r\n                        ))\r\n                    }\r\n                    renderInput={(params) => (\r\n                        <TextField {...params}\r\n                            variant=\"outlined\"\r\n                            label=\"Categorias\"\r\n                            style={{ flex: '1', maxWidth: '100%' }}\r\n                            multiline\r\n                            error={createTry && newQ.cat.length === 0}\r\n                            helperText={createTry && newQ.cat.length === 0 ? \"Introduce al menos una categoria\" : \"\"}\r\n                        />\r\n                    )}\r\n                />\r\n                {newQ.ans.map((el: any, i: number) => (<TextField\r\n                    key={i}\r\n                    required multiline\r\n                    label={\"Respuesta \" + (i + 1)}\r\n                    variant=\"outlined\" size=\"small\"\r\n                    value={el}\r\n                    onChange={e => setNewQ({ ans: (ans: any) => ans[i] = e.target.value })}\r\n                    error={createTry && !el}\r\n                    helperText={createTry && !el ? \"No pueden haber respuestas vacias! Si no te gusta, elimínala\" : \"\"}\r\n                    InputProps={{\r\n                        endAdornment:\r\n                            (<InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"Marcar como respuesta correcta\"\r\n                                    onClick={() => setNewQ({\r\n                                        resp: (resp: any) => {\r\n                                            let pos = resp.indexOf(i);\r\n                                            pos === -1 ? resp.push(i) : resp.splice(pos, 1);\r\n                                        }\r\n                                    })}\r\n                                    edge=\"start\"\r\n                                >\r\n                                    {newQ.resp.indexOf(i) !== -1 ? <Beenhere style={{ color: '#00c100' }} /> : <TurnedInNot />}\r\n                                </IconButton>\r\n                                <IconButton\r\n                                    aria-label=\"Eliminar respuesta\"\r\n                                    onClick={() => setNewQ({\r\n                                        resp: (resp: any) => {\r\n                                            let pos = resp.indexOf(i);\r\n                                            pos !== -1 && resp.splice(pos, resp.index);\r\n                                        },\r\n                                        ans: (ans: any) => ans.splice(i, 1)\r\n                                    })}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    <HighlightOff />\r\n                                </IconButton>\r\n                            </InputAdornment>)\r\n                    }}\r\n                />))}\r\n                <Button variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    style={{ width: 'fit-content', margin: 10 }}\r\n                    onClick={() => setNewQ({ ans: (ans: any) => ans.push(\"\") })}>\r\n                    Añadir respuesta\r\n                </Button>\r\n                <TextField\r\n                    multiline\r\n                    label=\"Observaciones\"\r\n                    value={newQ.obs}\r\n                    onChange={e => setNewQ({ obs: e.target.value })}\r\n                    variant=\"outlined\"\r\n                />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ width: 'fit-content', alignSelf: 'center' }}>Crear</Button>\r\n            </form>\r\n        </StickyPaper>\r\n    </div>);\r\n}","import { Button, createStyles, makeStyles, TextField, Theme, Typography, Chip, MenuItem, Link, Backdrop, CircularProgress } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link as RLink, useHistory } from 'react-router-dom';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport StickyPaper from '../components/StickyPaper';\r\nimport { DBManager, useCategories, useCategTree } from '../dbmanager';\r\n//import { CatTree, Exam } from '../types';\r\nimport { useStruct } from '../components/customHooks';\r\n//import { TreeItem, TreeView } from '@material-ui/lab';\r\n//import { ExpandMore, ChevronRight } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%'\r\n    },\r\n    paper: {\r\n        maxHeight: '40vh',\r\n        overflow: 'auto'\r\n    },\r\n    flform: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '10px 0',\r\n        '&>.with-margin>*': {\r\n            margin: 10\r\n        },\r\n        '&>:not(.with-margin)': {\r\n            margin: 10\r\n        }\r\n    },\r\n    /*rootCategory: {\r\n        color: theme.palette.text.secondary,\r\n        '&:hover > *': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n        '&:focus > *, &:$selected > *': {\r\n            backgroundColor: theme.palette.grey[400],\r\n            color: '#1a73e8',\r\n        },\r\n        '&:focus > * > $categoryLabel, &:hover > * > $categoryLabel, &$selected > * > $categoryLabel': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    categoryLabel: {\r\n        display: 'flex',\r\n        '&>p': {\r\n            flex: 1,\r\n            alignSelf: 'center'\r\n        }\r\n    },\r\n    content: {\r\n        color: theme.palette.text.secondary,\r\n        borderTopRightRadius: theme.spacing(2),\r\n        borderBottomRightRadius: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        '$expanded > &': {\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n    },\r\n    group: {\r\n        marginLeft: 0,\r\n        '& $content': {\r\n            paddingLeft: theme.spacing(2),\r\n        },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n        fontWeight: 'inherit',\r\n        color: 'inherit',\r\n    },*/\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function CreateExam({ setSnack }: { setSnack: React.Dispatch<any> }) {\r\n    const classes = useStyles(),\r\n        categories = useCategories(),\r\n        history = useHistory(),\r\n        //cattree = useCategTree(),\r\n        [loading, setL] = React.useState(false),\r\n        [startTry, setST] = React.useState(false),\r\n        [modN, setModN] = useStruct({ time: false, qtime: false }),\r\n        [newE, setNewE] = useStruct({ qnum: 10, time: '', qtime: '', randtype: 'true_random', cat: [], que:[], qpans:[], ans:[], res:[] });\r\n    \r\n    const handleStartExam = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setST(true);\r\n        try {\r\n            if (newE.qnum && newE.time > 0 && newE.randtype && newE.cat.length > 0) {\r\n                //Afegir el que falti\r\n                setL(true);\r\n                console.log(newE);\r\n                let id = await DBManager.createExam(newE);\r\n                if (id) return history.push(`/examen/${id}/1`);\r\n                else throw Error('There was an exception creating the exam'); //33ecd6d43a31c1\r\n                /*setNewE(null);\r\n                setST(false);*/\r\n            }\r\n        } catch (e) { \r\n            console.error(e);\r\n            setSnack({ open: true, status: 'error', msg: 'Error: ' + e.toString() }); \r\n        }\r\n        setL(false);\r\n    }\r\n\r\n    const setExamTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const v = e.target.value;\r\n        setModN({ time: !!v });\r\n        setNewE({ time: v ? +v * 60000 : '', qtime: (modN.qtime && newE.qtime) || !v ? null : Math.floor((+v * 60000) / newE.qnum) });\r\n    };\r\n\r\n    const setQuestionTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const v = e.target.value;\r\n        setModN({ qtime: !!v });\r\n        setNewE({ qtime: v ? +v * 1000 : '', time: (modN.time && newE.time) || !v ? null : (+v * 1000 * newE.qnum) });\r\n    };\r\n\r\n    /*const selectCategories = (id:string)=>(e: ChangeEvent)=>{\r\n        e.preventDefault();\r\n        setNewE({ cat: (cat:string[])=>{\r\n            let i = cat.indexOf(id);\r\n            i === -1 ? cat.push(id) : cat.splice(i,1);\r\n        }})\r\n    }\r\n\r\n    const renderTree = (nodes: CatTree, id: string, name: string) => {\r\n        const keys = Object.keys(nodes),\r\n            hasSons = keys.length > 1,\r\n            hasSelSons = hasSons && !!keys.find(k=>k!==\"__nq\" && newE.cat.indexOf(k) !== -1),\r\n            hasNoSelSons = hasSons && !!keys.find(k=>k!==\"__nq\" && newE.cat.indexOf(k) === -1),\r\n            checked = newE.cat.indexOf(id) !== -1 || (hasSons && !hasNoSelSons);\r\n        //console.log('nodes.id: ', id, ' nodes.name: ', name, 'nodes.children: ', keys, ' cattree:', cattree);\r\n        return (\r\n            <TreeItem key={id} nodeId={id} label={<div className={classes.categoryLabel}>\r\n                { id !== 'root' && <Checkbox checked={checked} indeterminate={hasSelSons && hasNoSelSons} onChange={selectCategories(id)} />}\r\n                <Typography variant=\"body1\">{name}</Typography>\r\n            </div>}>\r\n                {keys.length <= 1 ? null : keys.map(k => (k !== \"__nq\" && renderTree(nodes[k] as CatTree, (id === 'root' ? '' : id + '/') + k, k)))}\r\n            </TreeItem>\r\n        );\r\n    };*/\r\n\r\n    return (<div className={classes.root}>\r\n        <StickyPaper>\r\n            {!!categories && categories.length > 0\r\n                ? (<form id=\"doexam-form\" className={classes.flform} onSubmit={handleStartExam} autoComplete=\"off\">\r\n                    <Typography variant=\"h6\">Configura tu examen y ya puedes empezar!</Typography>\r\n                    <Autocomplete\r\n                        freeSolo multiple\r\n                        value={newE.cat}\r\n                        onChange={(event: any, newValue: Array<string>) => {\r\n                            setNewE({ cat: newValue });\r\n                        }}\r\n                        options={categories}\r\n                        defaultValue={[]}\r\n                        style={{ display: 'flex' }}\r\n                        renderTags={(value: string[], getTagProps: any) =>\r\n                            value.map((option: string, index: number) => (\r\n                                <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\r\n                            ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                            <TextField {...params}\r\n                                variant=\"outlined\"\r\n                                label=\"Categorias\"\r\n                                style={{ flex: '1', maxWidth: '100%' }}\r\n                                multiline\r\n                                error={startTry && newE.cat.length === 0}\r\n                                helperText={startTry && newE.cat.length === 0 ? \"Introduce al menos una categoria\" : \"\"}\r\n                            />\r\n                        )}\r\n                    />\r\n                    {/*<Paper className={classes.paper}>\r\n                    <TreeView\r\n                        defaultCollapseIcon={<ExpandMore />}\r\n                        defaultExpanded={['root']}\r\n                        defaultExpandIcon={<ChevronRight />}\r\n                    >\r\n                        {renderTree(cattree, 'root', 'Categorias')}\r\n                    </TreeView>\r\n                    </Paper>*/}\r\n                    <TextField\r\n                        select disabled\r\n                        variant=\"outlined\"\r\n                        label=\"Modo elección de preguntas\"\r\n                        value={newE.randtype}\r\n                        onChange={(e) => setNewE({ randtype: e.target.value })}\r\n                    >\r\n                        <MenuItem value=\"equal_split\">Proporcional entre categorias</MenuItem>\r\n                        <MenuItem value=\"proportional\">Segun número de preguntas en categoria</MenuItem>\r\n                        <MenuItem value=\"true_random\">Totalmente aleatorio</MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        label=\"Número de preguntas\"\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        error={startTry && !newE.qnum}\r\n                        value={newE.qnum}\r\n                        onChange={(e) => setNewE({ qnum: e.target.value })}\r\n                        InputLabelProps={{ shrink: true }}\r\n                    />\r\n                    <TextField\r\n                        label=\"Duración del test (minutos)\"\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        error={startTry && !newE.time}\r\n                        value={newE.time && newE.time / 60000}\r\n                        onChange={setExamTime}\r\n                        InputLabelProps={{ shrink: true }}\r\n                    />\r\n                    <TextField\r\n                        label=\"Duración de pregunta (segundos)\"\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        error={startTry && !newE.qtime}\r\n                        value={newE.qtime && newE.qtime / 1000}\r\n                        onChange={setQuestionTime}\r\n                        InputLabelProps={{ shrink: true }}\r\n                    />\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ width: 'fit-content', alignSelf: 'center' }}>Empezar!</Button>\r\n                </form>)\r\n                : (<div>\r\n                    <Typography variant=\"h6\">Faltan preguntas!</Typography>\r\n                    <Typography variant=\"body1\" gutterBottom>Introduce tus preguntas (o importalas en formato JSON) en el apartado <Link component={RLink} to=\"/preguntas/crear\">Crear Preguntas</Link></Typography>\r\n                </div>)\r\n            }\r\n        </StickyPaper>\r\n        <Backdrop className={classes.backdrop} open={loading || !categories}>\r\n            <CircularProgress color=\"secondary\" />\r\n        </Backdrop>\r\n    </div>);\r\n}","import { Button, createStyles, makeStyles, TextField, Theme, Typography, Chip, MenuItem, Link, CircularProgress, Checkbox, FormControl, FormControlLabel, FormGroup, FormHelperText, IconButton, Tooltip } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { Link as RLink, useHistory, useParams } from 'react-router-dom';\r\nimport StickyPaper from '../components/StickyPaper';\r\nimport { DBManager } from '../dbmanager';\r\nimport { AssignmentTurnedIn, Assistant, ChevronLeft, ChevronRight } from '@material-ui/icons';\r\n//import { TreeItem, TreeView } from '@material-ui/lab';\r\n//import { ExpandMore, ChevronRight } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%'\r\n    },\r\n    paper: {\r\n        [theme.breakpoints.up('md')]: {\r\n            minWidth: '50%'\r\n        },\r\n        minWidth: '100%'\r\n    },\r\n    questions: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    errdiv: {\r\n        textAlign: 'center',\r\n        '&>h1': {\r\n            fontFamily: 'monospace'\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n    },\r\n    topProgress: {\r\n        position: 'absolute'\r\n    }\r\n}));\r\n\r\nconst shuffle = (array: any[]) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n}\r\n\r\nconst msToString = (time: number) => {\r\n    let diff = (Date.now() - time) / 1000;\r\n    // calculate (and subtract) whole hours\r\n    const hours = Math.floor(diff / 3600); //% 24;\r\n    diff -= hours * 3600;\r\n\r\n    // calculate (and subtract) whole minutes\r\n    const mins = Math.floor(diff / 60) % 60;\r\n    diff -= mins * 60;\r\n\r\n    // calulate whole seconds (leave millis)\r\n    const secs = Math.floor(diff % 60);\r\n    return `${hours > 99 ? hours : (\"00\" + hours).slice(-2)}:${(\"00\" + mins).slice(-2)}:${(\"00\" + secs).slice(-2)}`;\r\n}\r\n\r\nexport default function ExamQuestion({ setSnack }: { setSnack: React.Dispatch<any> }) {\r\n    const classes = useStyles(),\r\n        history = useHistory(),\r\n        [error, setError] = React.useState(''),\r\n        [exam, setExam] = React.useState<any>({}),\r\n        [resps, setResps] = React.useState<any[]>([]), //Array de Respostes possibles barrejades\r\n        [ans, setAnswer] = React.useState<string[]>([]), //Array de solucions seleccionades\r\n        [question, setQuestion] = React.useState<any>({}),\r\n        [time, setTime] = React.useState<any>({ etxt: \"Exam Time: X\", qtxt: \"Question Time: Y\", qtime: 0, etime: 0, ended: false }),\r\n        antidx = React.useRef<number>(NaN),\r\n        startQ = React.useRef<number>(Date.now()),\r\n        interval = React.useRef<any>(NaN),\r\n        { id, index } = useParams<{ id: string, index: string }>();\r\n\r\n\r\n    const saveAnsToDB = async (isFinal?: boolean) => {\r\n        let idx = isFinal ? +index - 1 : antidx.current;\r\n        if (!isNaN(idx) && exam.id && question.id && (isFinal || (exam.id !== id || (exam.id === id) && question.id !== exam.que[+index - 1]))) {\r\n            //Estem canviant de pregunta/examen; Guardem la solució que tenim\r\n            try {\r\n                await DBManager.saveAnswer(exam, idx, ans.sort((a: string, b: string) => (+a) - (+b)).join('|'))\r\n                if (isFinal) {\r\n                    await DBManager.endExam(exam);\r\n                    history.push('/examen/' + exam.id);\r\n                }\r\n                else antidx.current = (+index - 1);\r\n\r\n            } catch (e) { setSnack({ open: true, status: 'error', msg: 'Error en guardado de la pregunta anterior:\\n' + e.toString() }) };\r\n        }\r\n        else antidx.current = (+index - 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let tellError = (e: any) => { console.error(e); setError(e.toString()); }\r\n        try {\r\n            //console.log('Fetching Question data: ', exam, question,id,index);\r\n            setError('');\r\n            saveAnsToDB();\r\n            if (!exam.id || exam.id !== id) //Load exam\r\n                DBManager.getExam(id)\r\n                    .then(ex => {\r\n                        if (!ex) throw 'Can\\'t get Exam - Is the ID correct?';\r\n                        setExam(ex);\r\n                        return ex;\r\n                    })\r\n                    .then(ex => {\r\n                        if (+index < 0 || +index > ex.que.length)\r\n                            throw 'Index Out Of Bounds';\r\n                        return (!question.id || question.id !== ex.que[+index - 1])\r\n                            ? DBManager.getQuestion(ex.que[+index - 1])\r\n                            : question;\r\n                    })\r\n                    .then(q => q ? setQuestion(q) : setError('Can\\'t get Question - Is the ID correct?'))\r\n                    .catch(tellError);\r\n\r\n            if (exam.id) {\r\n                if (+index < 0 || +index > exam.que.length) throw 'Index Out Of Bounds';\r\n                else if (!question.id || question.id !== exam.que[+index - 1])\r\n                    DBManager.getQuestion(exam.que[+index - 1])\r\n                        .then(q => q ? setQuestion(q) : setError('Can\\'t get Question - Is the ID correct?'))\r\n                        .catch(tellError);\r\n            }\r\n        } catch (e) {\r\n            tellError(e);\r\n        }\r\n    }, [id, index]);\r\n\r\n    const timeSetting = () => {\r\n        if (!exam.id || !question.id) return;\r\n        let ended = !exam.end && Date.now() > (exam.start + exam.time);\r\n        if (ended) {\r\n            console.log('time seems ended', ended);\r\n            setTime({ txt: 'Exam Ended', qtime: 0, etime: 0, ended: true });\r\n            if (!isNaN(interval.current)) clearInterval(interval.current);\r\n            interval.current = NaN;\r\n            return;\r\n        }\r\n        let now = Date.now();\r\n        setTime({\r\n            etxt: 'Exam Time: ' + msToString(+exam.start),\r\n            qtxt: 'Question Time: ' + msToString(startQ.current),\r\n            etime: Math.min(Math.ceil((now - exam.start) * 100 / exam.time), 100),\r\n            qtime: Math.min(Math.floor((now - startQ.current) * 100 / exam.qtime), 100),\r\n            ended\r\n        });\r\n    }\r\n\r\n    const toggleResp = (index: string) => () => {\r\n        let idx = ans.indexOf(index),\r\n            result = [];\r\n\r\n        if (idx === -1) result = [...ans, index];\r\n        else {\r\n            result = [...ans];\r\n            result.splice(idx, 1);\r\n        }\r\n        setAnswer(result);\r\n    };\r\n\r\n    const paintResults = (i: string) => {\r\n        if (time.ended && ans.length > 0) {\r\n            const sep = '|',\r\n                examans = sep + exam.ans[+index - 1] + sep,\r\n                resptrue = ans.indexOf(i) !== -1,\r\n                anstrue = examans.indexOf(sep + i + sep) !== -1;\r\n            if (resptrue && anstrue) return { backgroundColor: '#0a860a9e' };\r\n            else if ((resptrue && !anstrue) || (!resptrue && anstrue)) return { backgroundColor: '#a91f098c' }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (exam.id) setAnswer(exam.res[+index - 1] ? exam.res[+index - 1].split(\"|\") : []);\r\n        else setAnswer([]);\r\n        if (question.id) {\r\n            let r = question.resp.map((r: string, i: number) => [r, i.toString()]);\r\n            if (exam.end || Date.now() > (exam.start + exam.time)) {\r\n                setTime({ txt: 'Exam Ended', qtime: 0, etime: 0, ended: true })\r\n                setResps(r);\r\n            }\r\n            else { //Establim el temps només si l'examen no ha acabat\r\n                setResps(shuffle(r));\r\n                startQ.current = Date.now();\r\n                if (!isNaN(interval.current)) clearInterval(interval.current);\r\n                let intv = setInterval(timeSetting, 1000);\r\n                interval.current = intv;\r\n            }\r\n        }\r\n        else {\r\n            setResps([]);\r\n            if (!isNaN(interval.current)) clearInterval(interval.current);\r\n            interval.current = NaN;\r\n        }\r\n    }, [question]);\r\n\r\n    return (<div className={classes.root}>\r\n        <StickyPaper className={(time.ended ? 'colorful-disabled ':'')+classes.paper}>\r\n            {error\r\n                ? (<div className={classes.errdiv}>\r\n                    <Typography variant=\"h1\">404</Typography>\r\n                    <Typography variant=\"body1\" gutterBottom>{error}</Typography>\r\n                </div>)\r\n                : (exam.id && question.id\r\n                    ? (<div className={classes.questions}>\r\n                        <Typography variant=\"h6\">Pregunta {index} de {exam.que.length}</Typography>\r\n                        <Typography variant=\"body1\" gutterBottom>{question.enun}</Typography>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl} disabled={time.ended}>\r\n                            <FormGroup>\r\n                                {resps.map((el: any[]) => (<FormControlLabel key={el[1]}\r\n                                    style={paintResults(el[1])}\r\n                                    control={<Checkbox checked={ans.indexOf(el[1]) !== -1}\r\n                                        onChange={toggleResp(el[1])}\r\n                                        name={'resp_' + el[1]} />}\r\n                                    label={el[0]} />))}\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                        {time.ended && !!question.obs && (<TextField\r\n                            style={{ marginBottom: 10 }}\r\n                            multiline disabled\r\n                            label=\"Observaciones\"\r\n                            value={question.obs}\r\n                            variant=\"outlined\"\r\n                        />)}\r\n                        <div className={classes.root} style={{ justifyContent: 'space-evenly' }}>\r\n                            <Tooltip title=\"Pregunta Anterior\">\r\n                                <IconButton disabled={index === \"1\"} color=\"default\" edge=\"start\" component={RLink} to={`/examen/${id}/${+index - 1}`} ><ChevronLeft /></IconButton>\r\n                            </Tooltip>\r\n                            {time.ended\r\n                                ? (<Tooltip title=\"Resumen del Examen\">\r\n                                    <IconButton color=\"default\" component={RLink} to={`/examen/${id}`}><Assistant /></IconButton>\r\n                                </Tooltip>)\r\n                                : (<div className={classes.root}>\r\n                                    <Tooltip title={time.etxt}>\r\n                                        <CircularProgress color=\"primary\" size={80} thickness={20} variant=\"determinate\" value={time.etime} />\r\n                                    </Tooltip>\r\n                                    <Tooltip title={time.qtxt}>\r\n                                        <CircularProgress className={classes.topProgress} color=\"secondary\" size={40} thickness={20} variant=\"determinate\" value={time.qtime} />\r\n                                    </Tooltip>\r\n                                </div>)\r\n                            }\r\n                            {+index === exam.que.length && !time.ended\r\n                                ? (<Tooltip title=\"Acabar Examen\">\r\n                                    <IconButton color=\"default\" edge=\"end\" onClick={() => saveAnsToDB(true)} ><AssignmentTurnedIn /></IconButton>\r\n                                </Tooltip>)\r\n                                : (<Tooltip title=\"Pregunta Siguiente\">\r\n                                    <IconButton disabled={+index === exam.que.length} color=\"default\" edge=\"end\" component={RLink} to={`/examen/${id}/${+index + 1}`} ><ChevronRight /></IconButton>\r\n                                </Tooltip>)}\r\n                        </div>\r\n                    </div>)\r\n                    : (<CircularProgress color=\"secondary\" />))\r\n            }\r\n        </StickyPaper>\r\n    </div>);\r\n}","import { createStyles, makeStyles, Theme, Typography, Link, Paper } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { Link as RLink, useParams } from 'react-router-dom';\r\nimport StickyPaper from '../components/StickyPaper';\r\nimport { DBManager } from '../dbmanager';\r\nimport { Exam } from '../types';\r\n//import { TreeItem, TreeView } from '@material-ui/lab';\r\n//import { ExpandMore, ChevronRight } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%'\r\n    },\r\n    question: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 40,\r\n        width: 40,\r\n        margin: 10\r\n    }\r\n}));\r\n\r\nexport default function ExamSummary({ setSnack }: { setSnack: React.Dispatch<any> }) {\r\n    const classes = useStyles(),\r\n        [exam, setExam] = React.useState<Exam>(),\r\n        { id } = useParams<{ id: string, index: string }>();\r\n\r\n    useEffect(()=>{\r\n        DBManager.getExam(id)\r\n            .then(e=>setExam(e))\r\n            .catch(err=>{\r\n                setSnack({ open: true, status: 'error', msg: 'Error en obtener examen:\\n' + err.toString() });\r\n                //history.push('/yo'); //Per a quan estigui fet l'apartat \"jo\"\r\n            });\r\n    },[id]);\r\n\r\n    const calculateMark = ()=>{\r\n        //nota_sobre_10 = 10 * ((encerts - (errors/n possibles respostes))/quant.preguntes)\r\n        let mark = 0;\r\n        if (exam){\r\n            let good = 0, bad = 0;\r\n            exam.ans.forEach((ans,i)=>{\r\n                if (ans === exam.res[i]) good++;\r\n                else bad += 1/(exam.qpans[i]-1);\r\n            });\r\n            mark = (10 * ((good - bad) / exam.ans.length));\r\n        }\r\n        return mark.toFixed(2);\r\n    }\r\n\r\n    return (<div className={classes.root}>\r\n        <StickyPaper>\r\n            <Typography variant=\"h6\" gutterBottom>Examen del {exam && (new Date(exam.start).toLocaleDateString('es-ES',{ weekday:'long', day:'numeric', month:'numeric', year:'numeric', hour:'numeric', minute:'numeric' }))}</Typography>\r\n            <Typography variant=\"body1\" gutterBottom>Nota: <strong>{calculateMark()} / 10</strong>&nbsp;&nbsp;&nbsp;&nbsp;Aciertos: <strong>{exam?.ans.reduce((t,q,i)=>t+(q===exam.res[i]?1:0),0)}</strong>&nbsp;&nbsp;&nbsp;&nbsp;Fallos: <strong>{exam?.ans.reduce((t,q,i)=>t+(q!==exam.res[i]?1:0),0)}</strong></Typography>\r\n            <div>{exam?.ans.map((ans,i)=>(<Link component={RLink} underline=\"none\" to={`/examen/${id}/${i+1}`}><Paper key={i} elevation={4} className={classes.question} style={{ backgroundColor: exam.res[i] === ans ? 'green' : 'red' }}><Typography variant=\"h6\">{i+1}</Typography></Paper></Link>))}</div>\r\n        </StickyPaper>\r\n    </div>);\r\n}","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Home, LogIn } from './screens';\nimport { DBManager } from './dbmanager';\nimport { blue, deepOrange } from '@material-ui/core/colors';\nimport './general.css';\nfunction App() {\n    const [darkmode,setDarkMode] = React.useState<boolean>(matchMedia('(prefers-color-scheme: dark)').matches);\n\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: darkmode ? 'dark' : 'light',\n                    primary: blue,\n                    secondary: deepOrange\n                },\n            }),\n        [darkmode],\n    );\n    \n    //Check cookie with React.useEffect\n    const [loggedIn,setLoggedIn] = React.useState(false);\n    \n    const handleLogIn = async (apikey:string)=>{\n        if (!apikey) return 'No API Key Specified';\n        const res = await DBManager.login(apikey);\n        //TODO connect with server\n        setLoggedIn(!res);\n        return res;\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            { loggedIn \n                ? <Home changeMode={setDarkMode}/>\n                : <LogIn doLogIn={handleLogIn} />\n            }\n        </ThemeProvider>\n    );\n}\n/*\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}